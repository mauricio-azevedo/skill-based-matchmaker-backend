generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String        @id @default(uuid())
  email    String        @unique
  password String

  members  GroupMember[]
}

model Group {
  id         String @id @default(uuid())
  name       String
  inviteCode String @unique
  createdBy  String

  members       GroupMember[]
  players       Player[]
  rounds        Round[]
  PlayerPartner PlayerPartner[]

  createdAt DateTime @default(now())
}

/**
 * ─────────── MEMBRO ───────────
 */
model GroupMember {
  role Role

  userId String
  user   User   @relation(fields: [userId], references: [id])
  groupId String
  group   Group  @relation(fields: [groupId], references: [id])

  @@id([userId, groupId])
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}

/**
 * ─────────── PLAYER (placeholder) ───────────
 */
model Player {
  id         String  @id @default(uuid())
  name       String
  level      Int
  active     Boolean @default(true)
  matchCount Int     @default(0)

  groupId String
  group   Group  @relation(fields: [groupId], references: [id])

  partnerLinks     PlayerPartner[] @relation("PP_player")
  partnerLinksAsTo PlayerPartner[] @relation("PP_partner")

  @@unique([id, groupId])
}

/**
 * ─────────── ROUND ───────────
 */
model Round {
  id          String @id @default(uuid())
  roundNumber Int

  matches Match[]
  groupId String
  group   Group  @relation(fields: [groupId], references: [id])

  createdAt DateTime @default(now())

  @@unique([groupId, roundNumber])
}

/**
 * ─────────── MATCH (placeholder) ───────────
 */
model Match {
  id      String @id @default(uuid())
  teamA1  String
  teamA2  String
  teamB1  String
  teamB2  String
  gamesA  Int?
  gamesB  Int?

  roundId String
  round Round @relation(fields: [roundId], references: [id])

  @@index([roundId])
}

model PlayerPartner {
  count     Int    @default(0)

  playerId  String
  player  Player @relation("PP_player", fields: [playerId], references: [id])
  partnerId String
  partner Player @relation("PP_partner", fields: [partnerId], references: [id])
  groupId   String
  group   Group  @relation(fields: [groupId], references: [id])

  @@id([playerId, partnerId])
  @@index([groupId, playerId])
}
